<begin> ::=
|<blocks>

<blocks> ::= 
|<block>,<blocks> 
| <block>

<block> ::= 
| <output>
| <for_loop>
| <for_each_loop>
| <while_loop>
| <declaration>
| <assignment>
| <else_condition>
| <def_function>
| <if_condition>
| <call_function>
| <return>

<declaration> :: = 
|<datatype> ' ' <varName> '=' <expression> ';'
|<datatype> ' ' <varName> '=' <varName> ';'
|<datatype> ' ' <varName> ';'
|'@' <datatype> ' ' <varName> '=' <expression> ';'
|'@' <datatype> ' ' <varName> '=' <varName> ';'
|'@' <datatype> ' ' <varName> ';'

<assignment> ::= 
|<varName> '=' <varName> ';'
|<varName> '+=' <varName> ';'
|<varName> '-=' <varName> ';'
|<varName> '=' <expression> ';'
|<varName> '+=' <artim_expression> ';'
|<varName> '=' <artim_expression> ';'
|<varName> '--' ';'
|<varName> '++' ';'

<output> ::= 
|'print' '(' <expression> ')' ';' 
|'print' '(' <varName> ')' ';'
|'print' '(' ')' ';'


<if_condition> ::= 
| 'if' '(' <bool_expression> ')' '{' <blocks> '}' ';' 
| 'if' '(' <bool_expression> ')' '{' <blocks> '}' <else_condition> ';'

<else_condition> ::= 
| 'elseif' <bool_expression> '{' <blocks> '}' <else_condition> ';'
| 'elseif' <bool_expression> '{' <blocks> '}' ';'


<def_function> ::= 
|'def' <datatype> <varName>'(' <parameters> ')' '{' <blocks> '}' ';'
| def <datatype> <string_expression> '(' <parameters> ')' '{' '}' ';'
| def <datatype> <string_expression> '(' ')' '{' <blocks> '}' ';'
| def <datatype> <string_expression> '(' ')' '{' '}' ';'

<call_function> ::= 
| <varName> '(' <expression_list> ')'
| <varName> '(' <expression_list> ')'
| <varName> '(' ')'

<parameters> ::= 
| <declaration> ',' <parameters>
| <expression> ',' <parameters>
| <declaration>


<for_loop> ::= 
|'for' '(' <declaration> ';' <bool_expression> ';' <assignment> ')' '{' <blocks> '}' ';'

<for_each_loop> ::=
|'for_each' '(' <varName> ',' <varName> ')' '{' <blocks> '}' ';'
|'for_each' '(' <varName> ',' <array_expression> ')' '{' <blocks> '}' ';'

<while_loop> ::=
|'while' '(' <bool_expression> ')' '{' <blocks> '}' ';'

<varName> ::= /[A-z]+[A-z0-9]+/

<varName_list> ::= <varName>,<varName_list>
| <varName>


<datatype> ::= 
| 'int'
| 'string'
| 'bool'
| 'array'
| 'char'
| 'float'

<expression> ::= 
| <artim_expression> 
| <string_expresison> 
| <bool_expression>
| <char_expression>
| <call_function>
| <array_expression>

<expression_list> ::=
| <expression_list> ',' <expression>
| <expression>

<array_expression> ::= 
|'[' ']' 
| '[' <expression_list> ']'

<artim_expression> ::= 
| <term> '+' <artim_expression> ';'
| <term> '-' <artim_expression> ';'
| <term> ';'

<term> ::= 
| <factor> '*' <term>
| <factor> '/' <term>
| <factor> '%' <term>
| <factor>

<factor> ::= 
|'(' <artim_expression> ')'
| <Float>
| <Integer>

<string_expression> ::= 
/\".*\"/

<char_expression> ::= 
/\'.+\'/

<bool_expression> ::= 
|'(' <artim_expression> <comparison_operator> <artim_expression> ')'
|'(' <varName> <comparison_operator> <artim_expression> ')'
|'(' <artim_expression> <comparison_operator> <varName> ')'
|'(' <varName> <comparison_operator> <varName> ')'
|'(' <bool_expression> <comparison_operator> <bool_expression> ')'
|'(' 'true' ')'
|'(' 'false' ')'
|<negation_bool>

<negation_bool> ::=
|'!' <bool_expression>

<return> ::=
|'return' <expression>
|'return' <varName>
|'return'

<logic_operator> ::=
|'&&'
|'||'
|'!'

<comparison_operator>
|'=='
|'!='
|'>'
|'>='
|'<'
|'<='